name: docker-build

on:
  push:
    tags:
      - '*'

env:
  BASE_IMAGE_NAME: geokrety/pictures-processor-base
  UPLOADER_IMAGE_NAME: geokrety/pictures-processor-uploader
  DOWNLOADER_IMAGE_NAME: geokrety/pictures-processor-downloader

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set output
        id: vars
        run: |
          short_ref=${GITHUB_REF#refs/*/}
          echo "short_ref=${short_ref}" >> $GITHUB_OUTPUT
          echo "short_ref is $short_ref."

          declare -a raw
          raw=($(git branch -r --contains ${{ github.ref }}))
          declare -a base_tags uploader_tags downloader_tags
          for br in "${raw[@]}"; do
            branch="${br##*/}"
            echo "Found branch=${branch}"
            base_tags+=("${BASE_IMAGE_NAME}:${branch}")
            uploader_tags+=("${UPLOADER_IMAGE_NAME}:${branch}")
            downloader_tags+=("${DOWNLOADER_IMAGE_NAME}:${branch}")
          done
          echo "base_tags=$(IFS=, ; echo "${base_tags[*]}")" >> $GITHUB_OUTPUT
          echo "uploader_tags=$(IFS=, ; echo "${uploader_tags[*]}")" >> $GITHUB_OUTPUT
          echo "downloader_tags=$(IFS=, ; echo "${downloader_tags[*]}")" >> $GITHUB_OUTPUT
          echo "Will use base_tags: $(IFS=, ; echo "${base_tags[*]}")"
          echo "Will use uploader_tags: $(IFS=, ; echo "${uploader_tags[*]}")"
          echo "Will use downloader_tags: $(IFS=, ; echo "${downloader_tags[*]}")"

      - name: Build and push - base
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile.base
          push: true
          tags: ${{ steps.vars.outputs.base_tags }},${BASE_IMAGE_NAME}:${{ steps.vars.outputs.short_ref }}

      - name: Build and push - uploader
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile.uploader
          push: true
          build-args: |
            BASE_TAG=${{ steps.vars.outputs.short_ref }}
          tags: ${{ steps.vars.outputs.uploader_tags }},${UPLOADER_IMAGE_NAME}:${{ steps.vars.outputs.short_ref }}

      - name: Build and push - downloader
        uses: docker/build-push-action@v4
        with:
          file: Dockerfile.downloader
          push: true
          build-args: |
            BASE_TAG=${{ steps.vars.outputs.short_ref }}
          tags: ${{ steps.vars.outputs.downloader_tags }},${DOWNLOADER_IMAGE_NAME}:${{ steps.vars.outputs.short_ref }}
